window.formVisibilityGroupRules=function(){function e(e){var t=e.tagName.toUpperCase(),n=(e.type||"").toLowerCase();if("SELECT"!==t&&"checkbox"!==n&&"radio"!==n&&"file"!==n)return"INPUT"===t||"TEXTAREA"===t?(e.dispatchEvent(new Event("input")),void e.dispatchEvent(new Event("keyup"))):void e.dispatchEvent(new Event("input"));e.dispatchEvent(new Event("change"))}function t(e,o,r,i){console.log("processGroup was called.",e,o,r,i);var s=!1;e.groups.forEach((function(n){var c,l=!0;null===(c=n.rules)||void 0===c||c.forEach((function(n){console.log("rule is being processed. ",n);var s=a(n.field);if(s){var c="checkbox"===s.type?s.checked?"true":"false":s.value,u=function(e,t){if(console.log("Validating rule:",t,"with inputValue:",e),!t.operator)return console.warn("Rule operator is missing for rule",t),!1;var n=e?e.trim().toLowerCase():"",a=t.value?t.value.trim().toLowerCase():"";switch(console.log("valies comparison",n,a),t.operator){case"Is":return n===a;case"IsNot":return n!==a;case"Contains":return n.includes(a);case"DoesNotContain":return!n.includes(a);case"StartsWith":return n.startsWith(a);case"EndsWith":return n.endsWith(a);case"GreaterThan":var o=parseFloat(e),r=parseFloat(t.value);return isNaN(o)||isNaN(r)?e>t.value:o>r;case"LessThan":o=parseFloat(e),r=parseFloat(t.value);return isNaN(o)||isNaN(r)?e<t.value:o<r;case"Empty":return""===n;case"NotEmpty":return""!==n;default:return console.warn('validateRule: Unknown operator "'.concat(t.operator,'" in rule'),t),!1}}(c,n);console.log("currentField value",c,u),l&&!u&&(console.log("The group failed"),l=!1),i&&(console.log("adding change and keyup handlers."),function(e,t){var n=e.tagName.toUpperCase(),a=(e.type||"").toLowerCase();if("SELECT"!==n)return"INPUT"===n?"checkbox"===a||"radio"===a?(e.addEventListener("change",t),void e.addEventListener("click",t)):"file"===a?void e.addEventListener("change",t):(e.addEventListener("input",t),void e.addEventListener("keyup",t)):"TEXTAREA"===n?(e.addEventListener("input",t),void e.addEventListener("keyup",t)):void e.addEventListener("input",t);e.addEventListener("change",t)}(s,(function(n){console.log("field change event was called"),t(e,o,r,!1)})))}else console.warn("Field element not found: ".concat(n.field,". Ignoring the bad field."))})),console.log("before setting anyGroupRuleMet",s,l,s||l),s=s||l})),console.log("processGroups is at the stage before processing widgetContainer",e.action,r),r&&(console.log("Processing widgetContainer",e.action,s),"Show"===e.action?s?r.classList.remove("d-none"):(r.classList.add("d-none"),n(o)):"Hide"===e.action&&(s?(r.classList.add("d-none"),n(o)):r.classList.remove("d-none")))}function n(t){var n=t.getAttribute("data-default-value")||"";"checkbox"==t.type||"radio"==t.type?t.checked="on"==n:t.value=n,e(t)}function a(e){return document.querySelector('input[name="'.concat(e,'"],select[name="').concat(e,'"],textarea[name="').concat(e,'"]'))}return{initialize:function(n){var o=a(n.elementName);if(o&&"None"!==n.action){"checkbox"==o.type||"radio"==o.type?o.setAttribute("data-default-value",o.checked?"on":"off"):o.setAttribute("data-default-value",o.value);var r=o.closest(".widget");t(n,o,r,!0),e(o)}}}}();
