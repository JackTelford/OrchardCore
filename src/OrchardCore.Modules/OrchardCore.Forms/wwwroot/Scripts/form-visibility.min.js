window.formVisibilityGroups=function(){var t={template:'\n        <div class="mb-3">\n            \x3c!-- Loop through each group --\x3e\n            <div class="card mb-1" v-for="(group, groupIndex) in groups" :key="groupIndex">\n                <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Group {{ groupIndex + 1 }}</span>\n                    <input type="hidden" :name="prefix + \'Groups[\' + groupIndex + \'].IsRemoved\'" value="false" />\n                    <button type="button" class="btn btn-sm btn-danger" @click="removeGroup(groupIndex)">\n                        <i class="fa-solid fa-trash"></i>\n                    </button>\n                </div>\n                        \n                <div class="card-body">\n\n                    \x3c!-- Loop through each rule --\x3e\n                    <ul class="list-group w-100">\n                        \x3c!-- Loop through each rule in the group --\x3e\n                        <li class="list-group-item" v-for="(rule, ruleIndex) in group.rules" :key="ruleIndex">\n                            <div class="row">\n                                <div class="col">\n                                    <select class="form-select" v-model="rule.field" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Field\'">\n                                        <option value="">Select Field</option>\n                                    <option v-for="option in filteredFieldOptions(rule.field)" :value="option.value">\n                                        {{ option.text }}\n                                        </option>\n                                    </select>\n                                </div>\n                                <div class="col" :class="{\'d-none\': !rule.field}">\n                                    <select class="form-select" v-model="rule.operator"\n                                    :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Operator\'">\n                                        <option value="">Select Operator</option>\n                                        <option v-for="option in operatorsList(rule.field)" :value="option.value">\n                                            {{ option.text }}\n                                        </option>\n                                    </select>\n                                </div>\n                                <div class="col" :class="{\'d-none\': !shouldShowValue(rule.operator)}">\n                                    <input type="text" class="form-control" v-model="rule.value" placeholder="Value" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Value\'" />\n                                </div>\n                                <div class="col-auto">\n                                    <input type="hidden" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].IsRemoved\'" value="false" />\n                                    <button type="button" class="btn btn-sm btn-danger" @click="removeRule(groupIndex, ruleIndex)">\n                                        <i class="fa-solid fa-trash"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </li>\n  \n                    </ul>\n                </div>\n\n                <div class="card-footer">\n                    <div class="d-flex justify-content-end">\n                        <button type="button" class="btn btn-sm btn-primary" @click="addRule(groupIndex)">\n                            <i class="fa-solid fa-plus"></i> New Rule\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class="d-flex justify-content-end p-3">\n                <button type="button" class="btn btn-sm btn-primary" @click="addGroup()">\n                    <i class="fa-solid fa-circle-plus"></i> New Group\n                </button>\n            </div>\n        </div>\n        '};return{initialize:function(e){var n=Object.assign({},t,e);if(n.appElementSelector){var o=0;return new Vue({el:n.appElementSelector,data:function(){return{groups:n.groupOptions||[],fieldOptions:n.FieldOptions||[],operatorOptions:n.operatorOptions||[],allOperatorOptions:n.operatorOptions||[],prefix:"",widgetId:n.widgetId,preloadedOptions:[]}},methods:{addGroup:function(){var t={id:"group-"+o++,rules:[{id:"rule-"+Date.now()+"-"+Math.floor(1e3*Math.random()),field:"",operator:"",value:""}]};this.groups.push(t),this.$set(this.groups,this.groups.length-1,t)},addRule:function(t){var e={id:"rule-"+Date.now()+"-"+Math.floor(1e3*Math.random()),field:"",operator:"",value:""};this.$set(this.groups[t].rules,this.groups[t].rules.length,e)},removeGroup:function(t){this.groups.splice(t,1)},removeRule:function(t,e){this.groups[t].rules.splice(e,1)},populateFields:function(){var t=this.getInputs(document);this.fieldOptions=t.map((function(t){return{value:t.htmlName,text:t.htmlName,type:t.htmlInputType}}))},getInputs:function(t){var e=t.querySelectorAll(".widget-template"),n=[];return e.forEach((function(t){var e=t.querySelector('input[name$="FormInputElementPart.Name"]');if(e){var o=e.value.trim(),s="text",r=t.querySelector('select[name$="InputPart.Type"], select[name$="SelectPart.Editor"]');if(r&&(s=r.options[r.selectedIndex].value.toLowerCase()),!o||!s)return;n.push({htmlName:o,htmlInputType:s})}})),n},filteredFieldOptions:function(){var t,e=this.$el.closest(".widget-template");if(!e)return this.fieldOptions;var n=(null===(t=e.querySelector('input[name$="FormInputElementPart.Name"]'))||void 0===t?void 0:t.value.trim())||"";if(!n)return this.fieldOptions;var o=new Set;return this.fieldOptions.filter((function(t){var e=String(t.value||"").trim();return e!==n&&(!o.has(e)&&(o.add(e),!0))}))},operatorsList:function(t){var e=this.fieldOptions.find((function(e){return e.value===t}));if(!e)return[];var n=this.operatorMapping();return n[e.type]?this.allOperatorOptions.filter((function(t){return n[e.type].includes(t.value)})):[]},operatorMapping:function(){return{radio:["Is","IsNot"],checkbox:["Is","IsNot"],text:["Is","IsNot","Empty","NotEmpty","Contains","DoesNotContain","StartsWith","EndsWith"],number:["Is","IsNot","GreaterThan","LessThan"],email:["Is","IsNot","Empty","NotEmpty"],tel:["Is","IsNot"],date:["Is","IsNot","GreaterThan","LessThan"],time:["Is","IsNot","GreaterThan","LessThan"],datetime:["Is","IsNot","GreaterThan","LessThan"],"datetime-local":["Is","IsNot","GreaterThan","LessThan"],month:["Is","IsNot"],week:["Is","IsNot"],hidden:["Is","IsNot"],password:["Is","IsNot","Empty","NotEmpty"],color:["Is","IsNot"],range:["Is","IsNot","GreaterThan","LessThan"],file:["Is","IsNot"],url:["Is","IsNot","Contains"],image:["Is","IsNot"],reset:["Is","IsNot"],search:["Is","IsNot","Contains"],dropdown:["Is","IsNot","Empty","NotEmpty","Contains","DoesNotContain","StartsWith","EndsWith"],textarea:["Is","IsNot","Empty","NotEmpty","Contains","DoesNotContain","StartsWith","EndsWith"],submit:[]}},toggleTabEvent:function(){var t=this;document.addEventListener("shown.bs.tab",(function(e){if(e.target.matches('[data-bs-toggle="tab"]')){var n=e.target.closest(".content-part-wrapper-form-part"),o=t.getInputs(n||document);t.fieldOptions=o.map((function(t){return{value:t.htmlName,text:t.htmlName,type:t.htmlInputType}}))}}))},shouldShowValue:function(t){if(!t)return!1;return"Empty"!==t&&"NotEmpty"!==t}},mounted:function(){var t=this;n.prefix&&(this.prefix=n.prefix+"."),this.toggleTabEvent(),this.groups=n.groupOptions||[],this.operatorOptions=n.operatorOptions||[],this.allOperatorOptions=n.operatorOptions||[],this.populateFields(),new MutationObserver((function(e){e.forEach((function(e){"childList"===e.type&&e.addedNodes.length&&(t.preloadedOptions=t.filteredFieldOptions())}))})).observe(this.$el,{childList:!0,subtree:!0})},template:n.template})}console.error("appElementSelector is required")}}}();
