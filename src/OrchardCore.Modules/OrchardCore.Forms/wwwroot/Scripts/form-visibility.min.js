window.formVisibilityGroups=function(){var e={template:'\n        <div class="mb-3">\n            \x3c!-- Loop through each group --\x3e\n            <div class="card mb-1" v-for="(group, groupIndex) in groups" :key="groupIndex">\n                <div class="card-header d-flex justify-content-between align-items-center">\n                    <span>Group {{ groupIndex + 1 }}</span>\n                    <input type="hidden" :name="prefix + \'Groups[\' + groupIndex + \'].IsRemoved\'" value="false" />\n                    <button type="button" class="btn btn-sm btn-danger" @click="removeGroup(groupIndex)">\n                        <i class="fa-solid fa-trash"></i>\n                    </button>\n                </div>\n                        \n                <div class="card-body">\n\n                    \x3c!-- Loop through each rule --\x3e\n                    <ul class="list-group w-100">\n                        \x3c!-- Loop through each rule in the group --\x3e\n                        <li class="list-group-item" v-for="(rule, ruleIndex) in group.rules" :key="ruleIndex">\n                            <div class="row">\n                                <div class="col">\n                                    <select class="form-select" v-model="rule.field" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Field\'">\n                                        <option value="">Select Field</option>\n                                    <option v-for="option in filteredFieldOptions(rule.field)" :value="option.value">\n                                        {{ option.text }}\n                                        </option>\n                                    </select>\n                                </div>\n                                <div class="col" :class="{\'d-none\': !rule.field}">\n                                    <select class="form-select" v-model="rule.operator\n                                    " :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Operator\'">\n                                        <option value="">Select Operator</option>\n                                        <option v-for="option in operatorsList(rule.field)" :value="option.value">\n                                            {{ option.text }}\n                                        </option>\n                                    </select>\n                                </div>\n                                <div class="col" :class="{\'d-none\': !shouldShowValue(rule.operator)}">\n                                    <input type="text" class="form-control" v-model="rule.value" placeholder="Value" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Value\'" />\n                                </div>\n                                <div class="col-auto">\n                                    <input type="hidden" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].IsRemoved\'" value="false" />\n                                    <button type="button" class="btn btn-sm btn-danger" @click="removeRule(groupIndex, ruleIndex)">\n                                        <i class="fa-solid fa-trash"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </li>\n  \n                    </ul>\n                </div>\n\n                <div class="card-footer">\n                    <div class="d-flex justify-content-end">\n                        <button type="button" class="btn btn-sm btn-primary" @click="addRule(groupIndex)">\n                            <i class="fa-solid fa-plus"></i> New Rule\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class="d-flex justify-content-end p-3">\n                <button type="button" class="btn btn-sm btn-primary" @click="addGroup()">\n                    <i class="fa-solid fa-circle-plus"></i> New Group\n                </button>\n            </div>\n        </div>\n        '};return{initialize:function(t){var n=Object.assign({},e,t);if(n.appElementSelector){var o=0;return new Vue({el:n.appElementSelector,data:function(){return{groups:n.groupOptions||[],fieldOptions:n.FieldOptions||[],operatorOptions:n.operatorOptions||[],allOperatorOptions:n.operatorOptions||[],prefix:"",widgetId:n.widgetId,preloadedOptions:[]}},methods:{addGroup:function(){var e={id:"group-"+o++,rules:[{id:"rule-"+Date.now()+"-"+Math.floor(1e3*Math.random()),field:"",operator:"",value:""}]};this.groups.push(e),this.$set(this.groups,this.groups.length-1,e)},addRule:function(e){var t={id:"rule-"+Date.now()+"-"+Math.floor(1e3*Math.random()),field:"",operator:"",value:""};this.$set(this.groups[e].rules,this.groups[e].rules.length,t)},removeGroup:function(e){this.groups.splice(e,1)},removeRule:function(e,t){this.groups[e].rules.splice(t,1)},populateFields:function(){var e=this.getInputs(document);this.fieldOptions=e.map((function(e){return{value:e.htmlName,text:e.htmlName,type:e.htmlInputType}}))},getInputs:function(e){var t=e.querySelectorAll(".widget-template"),n=[];return t.forEach((function(e){var t=e.querySelector('input[name$="FormInputElementPart.Name"]');if(t){var o=t.value.trim(),i="text",s=e.querySelector('select[name$="InputPart.Type"], select[name$="SelectPart.Editor"]');if(s&&(i=s.options[s.selectedIndex].value.toLowerCase()),!o||!i)return;n.push({htmlName:o,htmlInputType:i})}})),n},filteredFieldOptions:function(){var e,t=this.$el.closest(".widget-template");if(!t)return this.fieldOptions;var n=(null===(e=t.querySelector('input[name$="FormInputElementPart.Name"]'))||void 0===e?void 0:e.value.trim())||"";if(!n)return this.fieldOptions;var o=new Set;return this.fieldOptions.filter((function(e){var t=String(e.value||"").trim();return t!==n&&(!o.has(t)&&(o.add(t),!0))}))},operatorsList:function(e){var t=this.fieldOptions.find((function(t){return t.value===e}));if(!t)return[];var n=this.operatorMapping();return n[t.type]?this.allOperatorOptions.filter((function(e){return n[t.type].includes(e.value.toLowerCase())})):[]},operatorMapping:function(){return{checkbox:["is","isnot"],text:["is","isnot","empty","notempty","contains","doesnotcontain","startswith","endswith"],number:["is","isnot","greaterthan","lessthan"],email:["is","isnot","empty","notempty"],tel:["is","isnot"],date:["is","isnot","greaterthan","lessthan"],time:["is","isnot","greaterthan","lessthan"],datetime:["is","isnot","greaterthan","lessthan"],"datetime-local":["is","isnot","greaterthan","lessthan"],month:["is","isnot"],week:["is","isnot"],hidden:["is","isnot"],password:["is","isnot","empty","notempty"],color:["is","isnot"],range:["is","isnot","greaterthan","lessthan"],file:["is","isnot"],url:["is","isnot","contains"],image:["is","isnot"],reset:["is","isnot"],search:["is","isnot","contains"],dropdown:["is","isnot","empty","notempty","contains","doesnotcontain","startswith","endswith"],textarea:["is","isnot","empty","notempty","contains","doesnotcontain","startswith","endswith"],submit:[]}},toggleTabEvent:function(){var e=this;document.addEventListener("shown.bs.tab",(function(t){if(t.target.matches('[data-bs-toggle="tab"]')){var n=t.target.closest(".content-part-wrapper-form-part"),o=e.getInputs(n||document);e.fieldOptions=o.map((function(e){return{value:e.htmlName,text:e.htmlName,type:e.htmlInputType}}))}}))},shouldShowValue:function(e){if(!e)return!1;var t=e.toLowerCase();return"empty"!==t&&"notempty"!==t}},mounted:function(){var e=this;n.prefix&&(this.prefix=n.prefix+"."),this.toggleTabEvent(),this.groups=n.groupOptions||[],this.operatorOptions=n.operatorOptions||[],this.allOperatorOptions=n.operatorOptions||[],this.populateFields(),new MutationObserver((function(t){t.forEach((function(t){"childList"===t.type&&t.addedNodes.length&&(e.preloadedOptions=e.filteredFieldOptions())}))})).observe(this.$el,{childList:!0,subtree:!0})},template:n.template})}console.error("appElementSelector is required")}}}();
