function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}window.formVisibilityGroups=function(){var e={template:'\n           <div>\n        <ul class="list-group">\n            \x3c!-- Loop through each group --\x3e\n            <li class="list-group-item" v-for="(group, groupIndex) in groups" :key="groupIndex">\n                <div class="d-flex justify-content-between mb-2">\n                    <span>Group {{ groupIndex + 1 }}</span>\n                    <input type="hidden" :name="prefix + \'Groups[\' + groupIndex + \'].IsRemoved\'" value="false" />\n                    <button type="button" class="btn btn-sm btn-danger" @click="removeGroup(groupIndex)">\n                        <i class="fa-solid fa-trash"></i> Remove Group\n                    </button>\n                </div>\n\n                \x3c!-- Loop through each rule --\x3e\n                <ul class="list-group mb-3">\n                    \x3c!-- Loop through each rule in the group --\x3e\n                    <li class="list-group-item" v-for="(rule, ruleIndex) in group.rules" :key="ruleIndex">\n                        <div class="row">\n                            <div class="col">\n                                <select class="form-select" v-model="rule.field" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Field\'">\n                                    <option value="">Select Field</option>\n                                    <option v-for="option in fieldOptions" :value="option.value">\n                                        {{ option.text }}\n                                    </option>\n                                </select>\n                            </div>\n\n                            <div class="col">\n                                <select class="form-select" v-model="rule.operator" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Operator\'">\n                                    <option value="">Select Operator</option>\n                                    <option v-for="option in operatorsList(rule.field)" :value="option.value">\n                                        {{ option.text }}\n                                    </option>\n                                </select>\n                            </div>\n\n                            <div class="col">\n                                <input type="text" class="form-control" v-model="rule.value" placeholder="Value" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].Value\'" />\n                            </div>\n\n                            <div class="col-auto">\n                                <input type="hidden" :name="prefix + \'Groups[\' + groupIndex + \'].Rules[\' + ruleIndex + \'].IsRemoved\'" value="false" />\n                                <button type="button" class="btn btn-sm btn-danger" @click="removeRule(groupIndex, ruleIndex)">\n                                    <i class="fa-solid fa-trash"></i> Remove Rule\n                                </button>\n                            </div>\n                        </div>\n                    </li>\n                    <li class="list-group-item">\n                        <div class="d-flex justify-content-end mb-2">\n                            <button type="button" class="btn btn-sm btn-secondary" @click="addRule(groupIndex)">\n                                <i class="fa-solid fa-circle-plus"></i> New Rule\n                            </button>\n                        </div>\n                    </li>\n                </ul>\n            </li>\n            <li class="list-group-item">\n                <div class="d-flex justify-content-end">\n                    <button type="button" class="btn btn-sm btn-primary" @click="addGroup()">\n                        <i class="fa-solid fa-circle-plus"></i> New Group\n                    </button>\n                </div>\n            </li>\n        </ul>\n    </div>\n        '};return{initialize:function(t){var r=Object.assign({},e,t);if(r.appElementSelector){var n=0;return new Vue({el:r.appElementSelector,data:function(){return{groups:[],fieldOptions:r.fieldOptions||[],operatorOptions:[],allOperatorOptions:[],prefix:"",widgetId:r.widgetId}},computed:{groupsJson:function(){return JSON.stringify(this.groups)}},methods:{addGroup:function(){console.log("[VisibilityGroups] addGroup triggered");var e={id:"group-"+n++,rules:[{id:"rule-"+Date.now()+"-"+Math.floor(1e3*Math.random()),field:"",operator:"",value:""}]};this.groups.push(e),this.$set(this.groups,this.groups.length-1,e)},addRule:function(e){var t={id:"rule-"+Date.now()+"-"+Math.floor(1e3*Math.random()),field:"",operator:"",value:""};this.$set(this.groups[e].rules,this.groups[e].rules.length,t)},removeGroup:function(e){this.groups.splice(e,1)},removeRule:function(e,t){this.groups[e].rules.splice(t,1)},populateFields:function(){var e=this.getInputs();this.fieldOptions=e.map((function(e){return{value:e.htmlId,text:e.htmlName,type:e.htmlInputType}}))},getInputs:function(){var e=document.querySelectorAll(".widget-template"),t=[];return e.forEach((function(e){var r=e.querySelector('input[name$="FormElementPart.Id"]'),n=e.querySelector('input[name$="FormInputElementPart.Name"]'),o=e.querySelector('select[name$="InputPart.Type"]');if(r&&o){var i=r.value,s=n.value,a=o.options[o.selectedIndex].value;if(!r.value||!a)return;t.push({htmlId:i,htmlName:s,htmlInputType:a})}})),t},findOperators:function(){var e=document.getElementById("operatorData");if(e)try{var t=JSON.parse(e.getAttribute("data-operators"));return this.allOperatorOptions=t,t}catch(e){console.error("Error parsing operator data:",e)}return[]},operatorMapping:function(){return{checkbox:["is","isnot"],text:["is","isnot","empty","notempty","contains","doesnotcontain","startswith","endswith"],number:["is","isnot","greaterthan","lessthan"],email:["is","isnot","empty","notempty"],tel:["is","isnot"],date:["is","isnot","greaterthan","lessthan"],time:["is","isnot","greaterthan","lessthan"],datetime:["is","isnot","greaterthan","lessthan"],"datetime-local":["is","isnot","greaterthan","lessthan"],month:["is","isnot"],week:["is","isnot"],hidden:["is","isnot"],password:["is","isnot","empty","notempty"],color:["is","isnot"],range:["is","isnot","greaterthan","lessthan"],file:["is","isnot"],url:["is","isnot","contains"],image:["is","isnot"],reset:["is","isnot"],search:["is","isnot","contains"],submit:[]}},operatorsList:function(e){var t=this.fieldOptions.find((function(t){return t.value===e}));if(!t)return[];var r=this.operatorMapping();return r[t.type]?this.allOperatorOptions.filter((function(e){return r[t.type].includes(e.value.toLowerCase())})):[]},populateGroupsFromInputs:function(){var e=document.querySelectorAll('[name^="'.concat(this.prefix,'Groups["][name*="').concat(this.widgetId,'"]')),t=new Map;e.forEach((function(e){var r=e.name.match(/Groups\[(\d+)\]\.Rules\[(\d+)\]\.(Field|Operator|Value)/);if(r){var n=Number(r[1]),o=Number(r[2]),i=r[3].toLowerCase();t.has(n)||t.set(n,{rules:[]}),t.get(n).rules[o]||(t.get(n).rules[o]={field:"",operator:"",value:""}),t.get(n).rules[o][i.toLowerCase()]=e.value}})),this.groups=Array.from(t.values())},syncWithNewInputs:function(e){try{var t=this.getInputs(),r=[];t.forEach((function(t){if(Array.isArray(e)){var n=e.filter((function(e){return e.rules.some((function(e){return e.field===t.htmlId}))}));r.push.apply(r,_toConsumableArray(n))}}));for(var n=[],o=new Set,i=0,s=r;i<s.length;i++){var a=s[i];o.has(a.id)||(o.add(a.id),n.push(a))}return n}catch(e){return console.error(e),[]}}},mounted:function(){var e=this;r.prefix&&(this.prefix=r.prefix+"."),this.$nextTick((function(){e.populateFields(),e.operatorOptions=e.findOperators();var t=Object.keys(localStorage).filter((function(t){return t.startsWith("savedGroups_".concat(e.widgetId))})),r=t.length>0?localStorage.getItem(t[t.length-1]):null;if(r)try{var n=JSON.parse(r);e.groups=e.syncWithNewInputs(n)}catch(e){console.error("Error parsing saved groups:",e)}else e.populateGroupsFromInputs();e.$watch("groups",(function(t){t&&0!==t.length&&localStorage.setItem("savedGroups_".concat(e.widgetId),JSON.stringify(t))}),{deep:!0})}))},template:r.template})}console.error("appElementSelector is required")}}}();
